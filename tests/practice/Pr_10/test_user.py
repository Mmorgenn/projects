import pytest
from src.practice.Pr_10.user import main
from io import StringIO


@pytest.mark.parametrize(
    "user_input,expected",
    (
        (
            "5",
            "START\n"
            "....T\n"
            "........TOKEN\n"
            "............id(5)\n"
            "........PROD\n"
            "............eps\n"
            "....SUM\n"
            "........eps\n",
        ),
        (
            "5 + 3 * 8 ",
            "START\n"
            "....T\n"
            "........TOKEN\n"
            "............id(5)\n"
            "........PROD\n"
            "............eps\n"
            "....SUM\n"
            "........+\n"
            "........T\n"
            "............TOKEN\n"
            "................id(3)\n"
            "............PROD\n"
            "................*\n"
            "................TOKEN\n"
            "....................id(8)\n"
            "................PROD\n"
            "....................eps\n"
            "........SUM\n"
            "............eps\n",
        ),
        (
            "( 1 + ( 2 * ( 3 + ( 4 + 5 ) ) ) )",
            "START\n"
            "....T\n"
            "........TOKEN\n"
            "............(\n"
            "............START\n"
            "................T\n"
            "....................TOKEN\n"
            "........................id(1)\n"
            "....................PROD\n"
            "........................eps\n"
            "................SUM\n"
            "....................+\n"
            "....................T\n"
            "........................TOKEN\n"
            "............................(\n"
            "............................START\n"
            "................................T\n"
            "....................................TOKEN\n"
            "........................................id(2)\n"
            "....................................PROD\n"
            "........................................*\n"
            "........................................TOKEN\n"
            "............................................(\n"
            "............................................START\n"
            "................................................T\n"
            "....................................................TOKEN\n"
            "........................................................id(3)\n"
            "....................................................PROD\n"
            "........................................................eps\n"
            "................................................SUM\n"
            "....................................................+\n"
            "....................................................T\n"
            "........................................................TOKEN\n"
            "............................................................(\n"
            "............................................................START\n"
            "................................................................T\n"
            "....................................................................TOKEN\n"
            "........................................................................id(4)\n"
            "....................................................................PROD\n"
            "........................................................................eps\n"
            "................................................................SUM\n"
            "....................................................................+\n"
            "....................................................................T\n"
            "........................................................................TOKEN\n"
            "............................................................................id(5)\n"
            "........................................................................PROD\n"
            "............................................................................eps\n"
            "....................................................................SUM\n"
            "........................................................................eps\n"
            "............................................................)\n"
            "........................................................PROD\n"
            "............................................................eps\n"
            "....................................................SUM\n"
            "........................................................eps\n"
            "............................................)\n"
            "........................................PROD\n"
            "............................................eps\n"
            "................................SUM\n"
            "....................................eps\n"
            "............................)\n"
            "........................PROD\n"
            "............................eps\n"
            "....................SUM\n"
            "........................eps\n"
            "............)\n"
            "........PROD\n"
            "............eps\n"
            "....SUM\n"
            "........eps\n",
        ),
        (
            "10 * 1234567890",
            "START\n"
            "....T\n"
            "........TOKEN\n"
            "............id(10)\n"
            "........PROD\n"
            "............*\n"
            "............TOKEN\n"
            "................id(1234567890)\n"
            "............PROD\n"
            "................eps\n"
            "....SUM\n"
            "........eps\n",
        ),
        (
            "( ( 101 ) )",
            "START\n"
            "....T\n"
            "........TOKEN\n"
            "............(\n"
            "............START\n"
            "................T\n"
            "....................TOKEN\n"
            "........................(\n"
            "........................START\n"
            "............................T\n"
            "................................TOKEN\n"
            "....................................id(101)\n"
            "................................PROD\n"
            "....................................eps\n"
            "............................SUM\n"
            "................................eps\n"
            "........................)\n"
            "....................PROD\n"
            "........................eps\n"
            "................SUM\n"
            "....................eps\n"
            "............)\n"
            "........PROD\n"
            "............eps\n"
            "....SUM\n"
            "........eps\n",
        ),
        (
            "333 + 333 * 333 + 333 + 333",
            "START\n"
            "....T\n"
            "........TOKEN\n"
            "............id(333)\n"
            "........PROD\n"
            "............eps\n"
            "....SUM\n"
            "........+\n"
            "........T\n"
            "............TOKEN\n"
            "................id(333)\n"
            "............PROD\n"
            "................*\n"
            "................TOKEN\n"
            "....................id(333)\n"
            "................PROD\n"
            "....................eps\n"
            "........SUM\n"
            "............+\n"
            "............T\n"
            "................TOKEN\n"
            "....................id(333)\n"
            "................PROD\n"
            "....................eps\n"
            "............SUM\n"
            "................+\n"
            "................T\n"
            "....................TOKEN\n"
            "........................id(333)\n"
            "....................PROD\n"
            "........................eps\n"
            "................SUM\n"
            "....................eps\n",
        ),
    ),
)
def test_main(user_input, expected, monkeypatch):
    monkeypatch.setattr("builtins.input", lambda _: user_input)
    fake_output = StringIO()
    monkeypatch.setattr("sys.stdout", fake_output)
    main()
    test_output = fake_output.getvalue()
    assert test_output == expected
